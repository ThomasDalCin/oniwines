<!--page loading section with video-->
<div class="w-full h-svh overflow-y-hidden relative z-50">

    <!--wrapper container elements-->
    <div class="loading-wrapper w-full transform transition-all duration-500 ease-[cubic-bezier(.06,.86,.78,.22)]">

        <!--container video-->
        <div class="section-content video-container w-full h-screen">
            <video class="video w-full h-full object-cover object-center" autoplay muted playsinline>
                <source src="{{ 'page-loading.mp4' | asset_url }}" />
            </video>
        </div>

        <!--home step text layout -->
        <div class="section-content w-full h-screen">
            <div class="w-full h-full flex flex-col items-center justify-center gap-y-10 relative">
                <div class="w-auto h-auto flex items-center justify-center text-center">
                    <h1 class="main-title-mobile lg:main-title-laptop">
                        {{ section.settings.first_step_title | default: "Scopri il mondo di Oniwines." }}
                    </h1>
                </div>
                <div class="cta-container w-auto h-auto flex items-center justify-center">
                    <div class="cta-orange">
                        <p class="uppercase text-[12px] leading-[16px] tracking-[-3%]">{{ section.settings.cta_text |
                            default: "Entra" }}</p>
                        {% render 'play-poligon' %}
                    </div>
                </div>
                <div class="bottom-text-container w-full absolute h-auto left-0 bottom-7 right-0">
                    <div class="w-auto h-auto flex items-center justify-center">
                        <p class="uppercase underline text-[12px] leading-[16px] tracking-[-3%] font-bold">
                            {{ section.settings.custom_settings_text | default: "Entra senza audio" }}
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!--container clip-path -->
        <div class="section-content w-full h-screen overflow-hidden relative flex items-center justify-center">
            <!--clip path content-->
            <div class="clip-path-container w-full h-full overflow-hidde relative"
                style="clip-path: polygon(20% 20%, 80% 20%, 80% 80%, 20% 80%);">
                <!-- Container video -->
                <video class="video-hero w-full h-full object-cover object-center relative" autoplay muted playsinline
                    loop>
                    <source src="https://cdn.shopify.com/videos/c/o/v/a700a6e9af1e4acd9fbeb045fc59915b.mp4" />
                </video>
                <!--container video icon -->
                <div class="audio-button w-auto h-auto absolute bottom-7 right-7 cursor-pointer">
                    {% render 'audio-icon' %}
                </div>
            </div>
        </div>

        <!--container canvas for three js map-->
        <div class="section-content w-full h-screen overflow-hidden relative">
            <!--container canvas absolute to container-->
            <div class="w-full h-full absolute inset-0">
                <canvas id="canvas" class="w-full h-full">
                    <!--three js here-->
                </canvas>
            </div>
            <!--overlay just text -->
            <div
                class="w-full h-[500vh] absolute left-0 top-0 right-0 z-10 transform transition-all duration-500 ease-[cubic-bezier(.06,.86,.78,.22)]">
            </div>
            <!--overlay cta -->
            <div class="w-full h-full absolute inset-0 z-20 flex items-end justify-center">
                <!--container cta-->
                <div class="w-auto h-auto mb-[155px]">
                    <div class="cta-orange">
                        <p class="uppercase text-[12px] leading-[16px] tracking-[-3%]">{{ section.settings.cta_step |
                            default: "Vai al sito" }}</p>
                        <div class="w-auto h-auto text-(--blue-color)">
                            {% render 'arrow-up' %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<script type="module">
    document.addEventListener('DOMContentLoaded', async () => {
        const navbar = document.querySelector('.navigation');
        const loadingWrapper = document.querySelector('.loading-wrapper');
        const video = document.querySelector('.video');
        const sectionsContainer = document.querySelectorAll('.section-content');
        const enterButton = document.querySelector('.cta-orange');
        const audioButton = document.querySelector('.audio-button');

        let currentTranslateValue = 0;

        const getPercentValueToScroll = async () => {
            const valueToDivide = 100;
            const percentValue = valueToDivide / sectionsContainer.length;
            return percentValue;
        }

        const percentValue = await getPercentValueToScroll();
        console.log(percentValue);

        document.body.classList.add('no-scroll');
        loadingWrapper.classList.add(`h-[${sectionsContainer.length * 100}vh]`);


        video.addEventListener('ended', () => {
            setTimeout(() => {
                currentTranslateValue += percentValue;

                loadingWrapper.style.transform = `translateY(-${currentTranslateValue}%)`;

                loadingWrapper.addEventListener('transitionend', () => {
                    navbar.classList.remove('opacity-0');
                });
            }, 500);
        });

        enterButton.addEventListener('click', () => {
            currentTranslateValue += percentValue;

            loadingWrapper.style.transform = `translateY(-${currentTranslateValue}%)`;

            loadingWrapper.addEventListener('transitionend', () => {
                setTimeout(() => {
                    gsap.to(".clip-path-container", {
                        clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
                        duration: 1,
                        ease: "Power2.easeOut",
                        onComplete: () => { }
                    })
                }, 200)
            })
        })

        audioButton.addEventListener('click', () => {
            currentTranslateValue += percentValue;
            loadingWrapper.style.transform = `translateY(-${currentTranslateValue}%)`;
        })


    });
</script>

<script type="module">
    import * as THREE from 'https://cdn.jsdelivr.net/npm/three@0.173.0/build/three.module.js';

    document.addEventListener('DOMContentLoaded', async () => {
        // Imposta il canvas e la scena
        const canvas = document.getElementById('canvas');
        const scene = new THREE.Scene();
        scene.background = new THREE.Color(0xDACABB);

        const texture = new THREE.TextureLoader().load('{{ "000.jpg" | asset_url }}');
        console.log(texture);

        const geometry = new THREE.PlaneGeometry(20, 20);
        const material = new THREE.MeshPhongMaterial({map: texture});
        const plane = new THREE.Mesh(geometry, material);
        plane.position.set(0, 0, 0);
        scene.add(plane);

        const axesHelper = new THREE.AxesHelper(5);
        scene.add(axesHelper);

        const canvasSizes = {width: window.innerWidth, height: window.innerHeight};
        const aspectRatio = canvasSizes.width / canvasSizes.height;
        const camera = new THREE.OrthographicCamera(-aspectRatio * 20, aspectRatio * 20, 20, -20, 0.1, 100);
        camera.position.set(0, 0, 10);
        camera.lookAt(0, 0, 0);

        const renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});
        renderer.setSize(canvasSizes.width, canvasSizes.height);

        renderer.render(scene, camera);
    });
</script>