<div class="outer-container-card">
  <div class="sticky-container w-full h-auto static lg:h-screen lg:sticky lg:top-10 overflow-hidden">
    <div class="mask-container w-full h-auto relative z-100 overflow-hidden lg:h-full">
      <div class="horizontal-scrollable-container-card h-auto w-full overflow-x-auto lg:h-full lg:overflow-x-hidden">
        <div class="content-card-canteen w-full h-full flex flex-row items-center justify-start gap-x-7 px-5 overflow-x-auto lg:overflow-hidden">

          {% for page in pages %}
            {% if page.title contains "Cantina" or page.title contains "Canteen" %}

              {% assign pageIndex = forloop.index %}
              {% assign pageImage = page.metafields.custom.page_image.value %}
              {% assign pageCanteenLogo = page.metafields.custom.page_canteen_logo.value %}

                <div class="card-canteen w-[250px] min-w-[250px] h-[600px] lg:w-[640px] lg:min-w-[640px] lg:h-[800px] rounded-[18px] bg-(--green-color-w-opacity) hover:bg-(--green-color) hover:outline-none flex flex-col items-start justify-between outline outline-offset-4 outline-(--green-color) relative group transition-all duration-200 ease-in-out">

                {% assign pageCustomTitle = page.title | split: " " %}
                {% assign pageCustomTitle = pageCustomTitle | slice: 1, pageCustomTitle.size %}
                {% assign pageCustomTitle = pageCustomTitle | join: " " %}

                <!-- container info text -->
                <div class="w-full h-auto flex flex-col items-start justify-center gap-y-16 p-3.5 lg:p-5">

                  <div class="w-[67px] h-[56px] flex items-center justify-center">
                    <img src="{{ pageCanteenLogo | img_url: 'master' }}" alt="{{ pageCanteenLogo.alt }}">
                  </div>

                  <div class="w-full h-auto">
                    <p class="font-(family-name:--main-title-mobile-font-family) text-[24px] text-white">{{ pageCustomTitle
 | upcase }}</p>
                  </div>

                  {% for block in section.blocks %}
                    {% assign blockIndex = forloop.index %}
                    {% if blockIndex == pageIndex %}
                      {% if block.type == "card-info" %}
                        <div class="w-auto h-auto flex flex-col items-start justify-center">
                          <p class="text-white mb-5">{{ block.settings.canteen_location }}</p>
                          <p class="text-white">{{ block.settings.canteen_info_text }}</p>
                        </div>
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                </div>

                <!-- container image -->
                <a class="w-full" href="{{ page.url }}">
                  <div class="w-full h-auto relative p-1">
                    <img
                      class="w-full h-[140px] lg:h-[377px] rounded-[14px]"
                      src="{{ pageImage | img_url: 'master' }}"
                      alt="{{ pageImage.alt }}">
                  </div>
                </a>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', () => {
  
    const outerCardsContainer = document.querySelector('.outer-container-card');
    const horizontalCardsScrollable = document.querySelector('.horizontal-scrollable-container-card');
    const contentsCard = document.querySelectorAll('.card-canteen');
  
  
    gsap.registerPlugin(ScrollTrigger);
    let matchMedia = gsap.matchMedia();
    matchMedia.add("(min-width:1024px)", () => {
  
      const getDynamicSizesCards = () => {
        const firstCardContent = contentsCard[0];
        if (firstCardContent) {
          const rectCard = firstCardContent.getBoundingClientRect();
          const widthCard = rectCard.width;
          const heightCard = rectCard.height;
          return {widthCard, heightCard};
        }
        return null;
      };
  
      const dynamicCardsSizes = getDynamicSizesCards();
      const offsetValue = 40;
  
      const sizesCardsValue = {
        width: (dynamicCardsSizes.widthCard * contentsCard.length) + (contentsCard.length / 2 * 26) + 40 + offsetValue,
        height: dynamicCardsSizes.heightCard
      }
  
      outerCardsContainer.style.height = `${sizesCardsValue.width}px`;
      horizontalCardsScrollable.style.width = `${sizesCardsValue.width}px`;
      const rectWidth = horizontalCardsScrollable.getBoundingClientRect().width;
      const scrollableCardsValue = rectWidth - window.innerWidth;
  
      gsap.to(horizontalCardsScrollable, {
        x: () => `-${scrollableCardsValue}px`,
        ease: "none",
        scrollTrigger: {
          trigger: outerCardsContainer,
          start: "top top",
          end: "center top+=100",
          scrub: 1
        }
      })
    })
  
  
  });
</script>


{% schema %}
  {
    "name": "project_showcase_slider",
    "settings": [],
    "blocks": [
      {
        "type": "card-info",
        "name": "card-info",
        "settings": [
          {
            "type": "text",
            "id": "canteen_location",
            "label": "Canteen location"
          }, {
            "type": "textarea",
            "id": "canteen_info_text",
            "label": "Canteen info text"
          }
        ]
      }
    ]
  }
{% endschema %}