<div class="outer-container">
  <div class="sticky-container w-full h-screen sticky top-0 overflow-hidden">
    <div class="mask-container w-full h-full relative z-100 overflow-hidden">
      <div class="horizontal-scrollable-container h-full overflow-x-hidden">
        <div class="content w-full h-full flex flex-row items-center justify-start gap-x-1.5 px-5">
          {% for block in section.blocks %}
            {% if block.type == "canteen_slider" %}
              <div class="item-content w-[500px] min-w-[500px] lg:min-w-[1472px] lg:w-[1472px] h-[500px] lg:h-[800px] relative">
                <img
                  class="w-full h-full object-cover object-center rounded-[8px]"
                  src="{{ block.settings.canteen_slider_image |  img_url: 'master' }}"
                  alt="{{ block.settings.canteen_slider_image.alt }}">

                {% if block.settings.is_label %}
                  <div class="w-auto h-auto hidden lg:absolute lg:top-[772px] right-[250px] lg:flex items-center justify-center">
                    {% render 'union-shape' %}
                    <div class="w-auto h-auto absolute">
                      <p>{{ block.settings.label_text | default: "Lorem ipsum" }}</p>
                    </div>
                  </div>
                {% endif %}
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', () => {
  
    const outerContainer = document.querySelector('.outer-container');
    const horizontalScrollable = document.querySelector('.horizontal-scrollable-container');
    const contents = document.querySelectorAll('.item-content');
  
    const getDynamicSizes = () => {
      const firstContent = contents[0];
      if (firstContent) {
        const rect = firstContent.getBoundingClientRect();
        const width = rect.width;
        const height = rect.height;
        return { width, height };
      }
      return null;
    };
  
    const dynamicSizes = getDynamicSizes();
    const offsetCardValue = 40;
  
    const sizesValue = {
        width: (dynamicSizes.width * contents.length ) +  (contents.length / 2 * 6) + offsetCardValue,
        height: dynamicSizes.height
    }

  
    outerContainer.style.height = `${sizesValue.width}px`;
    horizontalScrollable.style.width = `${sizesValue.width}px`;
    const rectWidth = horizontalScrollable.getBoundingClientRect().width;
    const scrollableValue = rectWidth - window.innerWidth;
  
    gsap.registerPlugin(ScrollTrigger);
  
    gsap.to(horizontalScrollable, {
        x: () => `-${scrollableValue}px` , 
        ease: "none",
        scrollTrigger: {
          trigger: outerContainer,
          start: "top top",
          end: "center top+=100",
          scrub: 1
        }
     })
  
  });
</script>


{% schema %}
  {
    "name": "canteen_slider",
    "settings": [],
    "blocks": [
      {
        "type": "canteen_slider",
        "name": "canteen_slider",
        "settings": [
          {
            "type": "image_picker",
            "id": "canteen_slider_image",
            "label": "Canteen slider image"
          }, {
            "type": "checkbox",
            "id": "is_label",
            "label": "is label image active"
          }, {
            "type": "text",
            "id": "label_text",
            "label": "Label text image"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Drag slider",
        "settings": {},
        "blocks": [
          {
            "type": "canteen_slider",
            "settings": {
              "canteen_slider_image": "",
              "is_label": true,
              "label_text": "Delicious Canteen Meals"
            }
          }
        ]
      }
    ]
  }
{% endschema %}