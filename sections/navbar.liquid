<!--main navbar -->
<div
    class="navigation fixed left-0 top-0 right-0 z-100 w-full h-auto px-4 py-3.5 opacity-0 transform transition-all duration-300 ease-in">
    <div class="w-full h-auto flex flex-row justify-between">
        <!--container logo-->
        <div class="w-auto h-auto">
            {% render 'oniwines-logo' %}
        </div>
        <!--container menu box -->
        <div class="menu-box">
            {% render 'menu-burger' %}
        </div>
    </div>
</div>

<!--container full screen navigation-->
<div class="navigation-container fixed inset-1.5 z-60 bg-(--blue-color) rounded-[8px] flex flex-col items-start justify-center hidden">
    <div class="w-full h-full flex flex-col items-start justify-center pt-16">

        <div class="w-full flex-1 flex flex-col items-start justify-between">
            <!--assign variable for each reference link into links menu-->
            {% assign menuLinks = "Home,Il progetto,Magazine,Contatti" | split: "," %}
            {% for menuLink in menuLinks %}
            {% for linkItem in linklists.main-menu.links %}
            {% if linkItem.title == menuLink %}
            <div
                class="w-full flex-1 flex flex-col items-start justify-center px-3 border border-b-(--border-color) first:border-t first:border-t-(--border-color)">
                <div class="w-full h-auto flex flex-row items-center justify-start">
                    <!--icon link-->
                    <div class="w-auto h-auto">
                        {% render 'arrow-up' %}
                    </div>
                    <!--container link-->
                    <div class="w-auto h-auto">
                        <li>
                            <a class="text-(--link-color)" href="{{ linkItem.url }}">{{ linkItem.title | upcase }}</a>
                        </li>
                    </div>
                </div>
            </div>
            {% endif %}
            {% endfor %}
            {% endfor %}
        </div>

        <div class="w-full flex-1 flex flex-col items-start justify-between">
            <!--assign variable for each reference link into links menu-->
            {% assign menuLinks = "Le cantine,Prodotti" | split: "," %}
            {% for menuLink in menuLinks %}
            {% for linkItem in linklists.main-menu.links %}
            {% if linkItem.title == menuLink %}
            <div
                class="w-full flex-1 flex flex-col items-start justify-center px-3 border border-b-(--border-color) first:border-t first:border-t-(--border-color)">
                <div class="w-full h-auto flex flex-row items-center justify-between">
                    <!--container link-->
                    <div class="w-auto h-auto">
                        <li>
                            <a class="text-stroke text-transparent" href="{{ linkItem.url }}">{{ linkItem.title | upcase
                                }}</a>
                        </li>
                    </div>
                    <!--container arrow right-->
                    <div class="w-auto h-auto">
                        {% render 'arrow-right' %}
                    </div>
                </div>
            </div>
            {% endif %}
            {% endfor %}
            {% endfor %}
        </div>

        <div
            class="w-full flex-1 flex flex-col items-start justify-between *:border *:border-b-(--border-color) first:border-t first:border-t-(--border-color)">
            <!--container switch language form-->
            <div class="w-full flex-1 px-3 flex items-center justify-center">
                {% form 'localization', id: "localization_form_tag" %}
                <div class="w-auto h-auto flex flex-row items-center justify-start gap-x-5">
                    {% for locale in shop.published_locales %}
                    <button class="language-button w-auto h-auto text-[#E3DBD2]" type="button" tabindex="0"
                        data-locale-code="{{ locale.iso_code }}">
                        {% case locale.endonym_name %}
                        {% when "Italiano" %} IT
                        {% when "English" %} EN
                        {% else %}
                        {% endcase %}
                    </button>
                    {% endfor %}
                </div>
                <input type="hidden" name="locale_code" value="{{ request.locale.iso_code }}" id="localeCode">
                {% endform %}
            </div>
            <!--container navigation contact info -->
            <div class="w-full flex-1 px-3 flex flex-row items-center justify-between">
                <div class="w-auto h-auto">
                    <a class="flex flex-row items-center justify-start gap-x-1 text-(--link-color)"
                        href="{{ section.settings.link_to_oniverse }}">{{ section.settings.link_to_oniverse_text |
                        default: "ONIVERSE" | upcase }}<span class="text-white">{% render 'arrow-up' %}</span></a>
                </div>
                <div class="w-auto h-auto">
                    <a class="text-(--link-color)" href="mailto:{{ section.settings.mail_to_email |  default: "
                        mail@oniwines.it" }}">{{ section.settings.main_to | default: "mail@oniwines.it" }}</a>
                </div>
            </div>
        </div>
    </div>
</div>


<!--javascript code here-->
<script>
    document.addEventListener('DOMContentLoaded', () => {

        //handle submission form language site
        const languageButtons = document.querySelectorAll('.language-button');
        const localizationForm = document.getElementById('localization_form_tag');
        const localeCodeHidden = document.getElementById('localeCode');
        let localeCodeActive = null;

        function showLocaleActive() {
            languageButtons.forEach((button) => {
                if (button.getAttribute('data-locale-code') != localeCodeHidden.value) {
                    button.classList.remove('text-[#E3DBD2]');
                    button.classList.add('text-(--link-disable-color)');
                }
            })
        }

        showLocaleActive();

        async function setLocaleCode(localeCode) {
            if (localeCodeHidden) {
                localeCodeHidden.value = localeCode;
            }
        }

        languageButtons.forEach((button) => {
            button.addEventListener('click', async (event) => {
                event.preventDefault();
                localeCodeActive = button.getAttribute('data-locale-code');

                try {
                    await setLocaleCode(localeCodeActive);
                    localizationForm.submit();
                } catch (error) {
                    console.error(error);
                }
            });
        });


        //handle toggle menu
        const menuButton = document.querySelector('.menu-box');
        const navigationContainer = document.querySelector('.navigation-container');

        menuButton.addEventListener('click', () => {
           navigationContainer.classList.toggle('hidden');
           document.body.classList.toggle('no-scroll');
        })

    })
</script>